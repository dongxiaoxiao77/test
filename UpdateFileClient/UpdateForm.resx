<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXScAAD4YEQCWSnUAkEZnABsHCgA5FwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdC8AAD8VGQ2lVpld4qD5VN2Z8giZTIMAKgoQAFMfAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwE0AAEgXIwyhT6te3pr8s/PP/6vyyf9Q14/4CJZHlgA3
        EBgAZyYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/9wAAEwXMQubR71E1oT+f+qo/4/ss/+L66//deii/znP
        evsHkT+pAD0QIgCjNwAAAAAAAAAAAAAAAAAAAAABAE0UPwaVPMsjzWj/QuB8/1fjif9l5ZT/Y+SS/1Dh
        hP863nb/HMdh/gSLNrsAQg8vAP+CAAAAAAAAAAADAEwPUAGNL9kOw1L/FtdZ/ynbZ/893nb/Rt99/0Hf
        ef8w3G3/FthZ/wfTTv8HvEr/AIQrygBCCz0AAAABAE0JXgCDIuMRuEj/MNBi/zjXa/873HH/Q994/0fg
        fP9F33v/O91z/yzYZv8dz1X/DcVE/wGuOP8Aeh3WAEUHRgJ2GKscrED/R8hn/1DQc/9P1Hb/Tth4/07b
        e/9O3Hz/Ttx8/07aev9O13j/T9N1/0nMa/8zwFX/EaM0/wFuFIwMhR6HLalB3DiyT9s1tlHhTspu/GLW
        gv9h14P/YdiE/2HYhP9h14L/YtWB/0rGaPk2tVDfOLBO2yilO9kJfxlsAlwEDQFqAxwAbAIaAHEORU29
        Zet21Y3/ddWN/3XWjf911o3/ddWM/3bUjP9GtVvbAGgDNABsAhsBaQMbAlwECQAAAAAAAAAAAG8QAABk
        DC5bu2vpitWY/4jVmP+I1pj/iNaY/4jVl/+J1Zf/U7Nh1wBVABsAXQQAAAAAAAAAAAAAAAAAAAAAAABo
        CgAAXgYuZ7lx6Z3Xpf+b16T/m9ek/5vXpP+b16T/nNek/1+xZtcATQAbAFYAAAAAAAAAAAAAAAAAAAAA
        AAAAYQQAAFcALna6eeqz3bb/sNy0/7DctP+w3LT/sNy0/7Lctf9ssG7XAEUAHABQAAAAAAAAAAAAAAAA
        AAAAAAAAAF0AAABVAClkqmTfl8iX+ZXHlveVx5b3lceW95XHlfeWx5b6XaNdywBEABcATQAAAAAAAAAA
        AAAAAAAAAAAAAABIAAAARgAKE1sTWxteG3IbXhpxG14acRteGnEbXhpxG14achJZElAAOAAFADoAAAAA
        AAAAAAAA/n8AAPw/AAD4HwAA8A8AAOAHAACAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAADgBwAA4AcAAOAH
        AADgBwAA4AcAAA==
</value>
  </data>
</root>